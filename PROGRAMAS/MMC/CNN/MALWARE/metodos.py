

import numpy as np
import cv2

from PIL import Image
from math import floor, sqrt



def array1D_to_array2D(array):
    lon = len(array)
    lado = floor(sqrt(lon))
    
    if lado == 0:
        return np.empty((0,0))
    
    lado2 = lon // lado
    im_Array = array[:lado*lado2]
    im_Matriz = im_Array.reshape((lado, lado2))   
    im_Matriz = im_Matriz.astype(np.uint8)
    
    return im_Matriz
    

def metodo1(width, height, im_Array):
    
    longitud = len(im_Array)
    lado = floor(sqrt(longitud))
    
    im_ArrayFin = im_Array[:lado*lado]
    im_Matriz = im_ArrayFin.reshape((lado, lado))
    
    result = np.resize(im_Matriz, (width, height))
    result = result.astype(np.uint8)
    
    return result


def metodo2(width, height, im_Array):

    im_Matriz = array1D_to_array2D(im_Array)
    
    image = Image.fromarray(im_Matriz.astype(np.uint8))

    originalW, originalH = image.size
    
    if originalW + 1 <= width  or originalH + 1 <= height:
        imagen = metodo1(width,height,im_Array)
        
    else:
        left = np.random.randint(0, originalW - width + 1)
        top = np.random.randint(0, originalH - height + 1)
        right = left + width
        bottom = top + height
    
        recorte = image.crop((left, top, right, bottom))
        cropArray = np.array(recorte)
        
        imagen = cropArray.reshape((width,height))

    return imagen

def metodo3(width, height, image_array, interpolation):
       
    im_Matriz = array1D_to_array2D(image_array)
    
    if im_Matriz.size == 0:
        return im_Matriz
    
    result = cv2.resize(im_Matriz, (width, height), interpolation = interpolation)
    
    return result