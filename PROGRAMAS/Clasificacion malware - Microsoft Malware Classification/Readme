# Microsoft Malware Classification Challenge

Este repositorio contiene scripts de Python utilizados para el análisis y clasificación de malware utilizando diversas a
rquitecturas de aprendizaje automático. Los datos provienen del [Microsoft Malware Classification Challenge (BIG 2015) 
en Kaggle] https://www.kaggle.com/competitions/malware-classification/data

## Contenido

- `MMC_AE.py`: Script para un Autoencoder.
- `MMC_CAE.py`: Script para un Autoencoder Convolucional.
- `MMC_CNN.py`: Script para una Red Neuronal Convolucional.
- `MMC_DAE.py`: Script para un Autoencoder Denoising.
- `MMCdata.py`: Script para el preprocesamiento de los datos de entrenamiento.
- `MMCdata_test.py`: Script para el preprocesamiento de los datos de prueba.
- `aeVER.py`: Script para ver graficamente en 3 imagenes como eras los datos originales, comprimidos y reconstruidos
- `aux.py`: Funciones auxiliares para el preprocesamiento de datos.
- `confusionMMC_CNN.py`: Genera la matriz de confusión.
- `trainLabels.csv`: Archivo CSV con las etiquetas de entrenamiento.

## Requisitos

1. Datos de Kaggle:
   Primero, necesitas descargar los datos del [Microsoft Malware Classification Challenge] de Kaggle. 
   En la memoria hay más detalles de como descomprimirlos.

2. Entorno Python:
   Asegúrate de tener instalado Python 3.x y las siguientes librerías:

   pip install numpy matplotlib seaborn scikit-learn tensorflow keras opencv-python Pillow


## Uso

1. Preprocesa los datos de entrenamiento: python3 MMCdata.py
2. Preprocesa los datos de prueba: python3 MMCdata_test.py
3. Entrenamiento de Modelos:
      Entrena un Autoencoder: python3 MMC_AE.py
      Entrena un Autoencoder Profundo: python3 MMC_DAE.py
      Entrena un Autoencoder Convolucional: python3 MMC_CAE.py
      Entrena una Red Neuronal Convolucional: python3 MMC_CNN.py

4. Evaluación de Modelos. Genera la matriz de confusión:  python3 confusionMMC_CNN.py
